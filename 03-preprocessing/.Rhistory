#| include: false
library(sf)
library(tmap)
library(tidyverse)
library(here)
library(knitr)
library(units)
#| include: false
library(sf)
library(tmap)
library(tidyverse)
library(here)
library(knitr)
library(units)
#| include: false
#| warning: false
limit <- st_read("C:\Users\bsf31\Documents\post-meds\data\policy-data\lup-limit\limite_put.shp")
#| include: false
#| warning: false
limit <- st_read("C:/Users/bsf31/Documents/post-meds/data/policy-data/lup-limit/limite_put.shp")
properties <- limit |>
select(id, put_id, anho_capa, estado, cod_dpto, cod_dist) |>
mutate(year_inactive = NA,
to_putid = NA, .before = geometry)
# find the inactive properties from subset that interesect the larger dataset
property_intersect <- st_intersection(properties, property_boundary)
# find the inactive properties from subset that interesect the larger dataset
property_intersect <- st_intersection(properties, limit)
# Get a sorted list of the unique inactive put_ids
properties_put_ids <- sort(properties$put_id)
# Loop through the inactive put_ids
for (i in properties_put_ids){
# Filter the intersection dataset to only include rows where the put_id matches the current iteration,and select only the put_id.1, anho_capa, and anho_capa.1 columns (put_id.1 is the ID of the property that this property was merged into, anho_capa is the year this property became inactive, and anho_capa.1 is theyear the property it was merged into became active)
temp_df <- property_intersect %>%
filter(put_id == i) %>%
select(put_id, put_id.1, anho_capa, anho_capa.1) |>
# Create a new column to store the percentage of the current property that overlaps with the merged property
mutate(area = NA)
# Get the area of the merged property that the current property overlaps with
area_i <-  temp_df |>
filter(put_id.1 == i) |>
st_area() |>
drop_units()
# Calculate the percentage of the current property that overlaps with the merged property,and filter the temp_df to only include rows where this percentage is greater than 25%
temp_df['area'] <- (drop_units(st_area(temp_df))/ area_i) * 100
temp_df <- temp_df |>
filter(area > 25)
print(temp_df)}
